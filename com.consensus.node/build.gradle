

buildscript {
    ext {
        springBootVersion = '2.0.0.BUILD-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/libs-snapshot' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}
apply plugin: 'application'
apply plugin:'java'
mainClassName = 'com.consensus.node' + '.Main'
ext.moduleName = 'com.consensus.node'
repositories {
    mavenCentral()
    jcenter()
    maven { url "http://repo.spring.io/libs-snapshot" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {

    compile project(':com.consensus.grid')
    implementation project(':com.consensus.utils')
    implementation project(':com.consensus.kafka')
//    testCompile project(':com.consensus.grid')

//    compile("org.springframework.boot:spring-boot-starter-web:2.0.2.RELEASE")
    testCompile group: 'junit', name: 'junit', version: '4.12'
//    testCompile "org.springframework.kafka:spring-kafka-test:1.1.2.BUILD-SNAPSHOT"//    testCompile group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.1.4.RELEASE'

}
compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}
//compileTestJava {
//    inputs.property("moduleName", moduleName)
//    doFirst {
//        options.compilerArgs = [
//                '--module-path', classpath.asPath,
//        ]
//        classpath = files()
//    }
//}


//jar {
//    inputs.property("moduleName", moduleName)
//    manifest {
//        attributes('Automatic-Module-Name': moduleName)
//    }
//}